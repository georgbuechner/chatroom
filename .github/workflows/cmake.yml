name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Install Conan
      shell: bash
      env:
        CC: gcc-9
        CXX: gcc-9
      run: |
        mkdir build
        cd build
        pip install wheel
        pip install setuptools
        pip install conan
    
    - name: Install Dependencies
      shell: bash
      env:
        CC: gcc-9
        CXX: gcc-9
      run: |
        cd build
        export PATH=$PATH:/home/runner/.local/bin
        conan config init
        conan install .. --build=missing -s compiler.libcxx=libstdc++11
   
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
   
    - name: Build
      shell: bash
      env:
        CC: gcc-9
        CXX: gcc-9
      run: |
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        cmake --build . --config $BUILD_TYPE
        
    - name: DO tests
      run: |
        cd webserver
        chatroom_tests.o
